# -*- coding: utf-8 -*-
"""Naman.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vXetODzD1DVSMZDoN5BS0l6QJfkpyzq1
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np


lobster = pd.read_csv("lobsterland_2021.csv")
lobster.head()

lobster.info()

lobster.shape
(99,20)
plt.figure(figsize=(12,18))
sns. barplot (data= lobster, x='Precip',y='UniqueVisitor')

lobster.columns

print(lobster['Spec_Event'].head())

print(lobster['Spec_Event'].describe())

lobster['Spec_Event'] = lobster['Spec_Event'].astype('category')

print(lobster['Spec_Event'].value_counts())

"""In Step 2, we used the describe() function to get an overview of our data, which includes things like how many values are there, how many unique values, what's the most common value, and how often it appears.

In Step 3, we used the value_counts() function to specifically look at one categorical variable called "SpecEvent". This helped us understand better how often each different event happened. It's like counting how many times each type of event occurred, which gives us a clearer picture of what's happening with that variable.


"""

m_values = lobster.isnull().sum()
print("Missing values in the dataset:")
print(m_values)
lobster['Precip'].fillna(0, inplace=True)

"""I used a method called isnull().sum() to find out how many missing values there are in each column of the DataFrame. If the sum for a column is greater than zero, it means there are missing values in that column. Specifically, I looked for missing values in the 'Precip' column by checking if there were any NaN values present."""

lobster['Min'] = lobster['Min'].apply(lambda x: max(x, 51))
subset = lobster.iloc[-4:]
print(subset)

lobster_stats = lobster.describe()
subset_stats = subset.describe()
print(lobster_stats)
print(subset_stats)

diff = subset_stats.loc["mean"] - lobster_stats.loc["mean"]
print(diff)

pct_diff = diff / lobster_stats.loc["mean"] * 100
print(pct_diff)

"""
Based on what we found, two things really stand out: the "Precip" and "DayPass" variables. During the Labor Day long weekend, there was no rain at all, which is a big difference compared to the average rainfall of 0.11 inches. This suggests the weather was perfect for going to Lobster Land, so more people probably visited the park.

Also, we noticed that there were a lot more day passes sold during the Labor Day weekend compared to the usual. This could be because the weather was great and people wanted to enjoy the end of summer at the park. It could also be because Lobster Land offered special deals on day passes for the holiday weekend.

So, in short, the awesome weather and maybe some special offers likely brought more people to Lobster Land over Labor Day weekend, leading to higher sales of day passes.


"""

mapping = {
    'Weekday': 'Weekday',
    'Saturday': 'Weekend',
    'Sunday': 'Weekend',
    'Memorial Day': 'Holiday',
    'Independence Day': 'Holiday',
    'Labor Day': 'Holiday',
    'Other': 'Other',
    'Summer': 'Other'
}
lobster['day_type'] = lobster['day_type'].map(mapping)

"""Making analysis and understanding data can be easier if we group things together. For example, instead of looking at each holiday separately like Memorial Day, Independence Day, and Labor Day, we can just call them all "Holiday". This helps us see patterns and behaviors related to holidays more easily. Also, when we simplify how we look at data like this, it can help computer programs work better when they're trying to predict things based on the data. So, grouping similar things together can make things simpler and help us make better predictions."""

lobster.rename(columns={'Average': 'Avg'}, inplace=True)

days_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

# Boxplot
plt.figure(figsize=(10, 6))
plt.boxplot(grouped_data.values)
plt.xlabel('Day of Week')
plt.ylabel('Daily Gross Revenue')
plt.title('Boxplot of Daily Gross Revenue by Day of Week')
plt.xticks(ticks=np.arange(1, 8), labels=days_of_week)
plt.grid(True)
plt.show()

"""The boxplot shows how the daily gross revenue varies for each day of the week. The widest box, which represents Sunday, means that the revenue on Sundays has the most ups and downs, or variability. On the other hand, Tuesday has the narrowest box, indicating the revenue doesn't change much on that day. Saturdays and Sundays have the highest middle revenue values compared to other days, while Thursdays have the lowest. So, if we look at the middle 50% of revenue values, Saturdays and Sundays are the best days, while Thursdays are not as good.




"""

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.hist(lobster['ParkingRev'], bins=20, color='grey', edgecolor='black')
plt.xlabel('ParkingRev')
plt.ylabel('Frequency')
plt.title('Distribution of Parking Revenue per Day')
plt.grid(True)

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.hist(lobster['ParkingRev'], bins=50, color='grey', edgecolor='black')
plt.xlabel('ParkingRev')
plt.ylabel('Frequency')
plt.title('Distribution of Parking Revenue per Day (More Bins)')
plt.grid(True)

sns.set_style("whitegrid")

custom_palette = sns.color_palette("muted")

# Plot
plt.figure(figsize=(10, 6))
sns.histplot(data=lobster, x='ParkingRev', bins=20, hue='Spec_Event', kde=True, palette=custom_palette, alpha=0.7)
plt.xlabel('Parking Revenue')
plt.ylabel('Frequency')
plt.title('Distribution of Parking Revenue per Day with Special Events')
plt.legend(title='Special Event', loc='upper right')
plt.grid(True, linestyle='--', alpha=0.5)
sns.despine()
plt.show()

"""A)Imagine a histogram like a bar chart that shows how many times different values appear in a set of data. By increasing the number of bins in the histogram, we can get a clearer picture of how the data is spread out. When we have fewer bins, the bars are wider, so it gives us a broad idea of the data's distribution. But when we have more bins, the bars are narrower, which gives us a more detailed look at the data. So, the first histogram, with fewer bins, gives us a general overview, while the second one, with more bins, helps us see the smaller differences and patterns in the data more clearly.

B)Adding Special Events as a hue variable in the histogram helps us see how different types of events relate to parking revenue visually. Think of it as coloring the bars in the histogram based on the type of event. This way, we can easily see if certain types of events bring in more or less parking revenue compared to others. By looking at the colored bars, we can understand how events impact parking revenue at LobsterLand. This information can be really helpful for LobsterLand to plan events better and manage parking effectively, as it shows which events attract more visitors and generate more parking revenue.
"""

custom_palette = sns.color_palette(["#FF6347", "#87CEEB"])

# Plot
plt.figure(figsize=(8, 6))
sns.countplot(data=lobster, x='Fireworks', palette=custom_palette)
plt.xlabel('Fireworks')
plt.ylabel('Frequency')
plt.title('Frequency of Dates with and without Fireworks in Summer 2021')
plt.show()

"""The graph tells us that during summer 2021, there were more days when fireworks happened compared to days when there were no fireworks. It seems like there were about twice as many days with fireworks as there were without. However, remember that this data might not represent all places or all of summer 2021."""

sns.set_style("whitegrid")
custom_palette = sns.color_palette("pastel")

# Plot
plt.figure(figsize=(10, 6))
sns.barplot(data=lobster, x='Fireworks', y='DailyGrossRev', palette=custom_palette)
plt.xlabel('Fireworks')
plt.ylabel('Daily Gross Revenue')
plt.title('Comparison of Daily Gross Revenue on Fireworks Dates vs. Non-Fireworks Dates')

for i, bar in enumerate(plt.gca().patches):
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, height, f'{height:.2f}', ha='center', va='bottom')

plt.show()

"""The graph compares how much money Lobster Land makes each day when there are fireworks versus when there are no fireworks. It looks like Lobster Land makes more money on days when there are fireworks compared to days when there aren't. Here are some details from the graph:

On the best days with fireworks, Lobster Land makes around $160,000.

On the worst days with fireworks, Lobster Land still makes around $111,000.

On the best days without fireworks, Lobster Land makes around $146,000.

On the worst days without fireworks, Lobster Land makes around $20,000
"""

sns.barplot(data=lobster, x='Day.of.Week', y='DailyGrossRev', hue='Fireworks')
plt.xlabel('Days of Week')
plt.ylabel('Total Daily Revenue')
plt.title('Total Daily Revenue by Day of Week with Fireworks Indicator')
plt.legend(title='Fireworks', loc='upper left', labels=['No', 'Yes'])
plt.show()

"""The graph tells us how much money Lobster Land makes each day of the week and whether there were fireworks on those days. Fridays and Saturdays bring in the most money, with both days making over $150,000.

 On the other hand, Sundays and Mondays make the least, each around $50,000. Interestingly, it seems like having fireworks boosts the revenue. Every day that had fireworks made more money compared to days without fireworks. So, it looks like fireworks are connected to higher revenue at Lobster Land.

4. a Increasing Daily Revenue: main aim is to boost the amount of money Lobster Land makes each day by 15% in the next year. This will involve running targeted marketing campaigns, making sure customers have better experiences, and finding ways to make our operations more efficient to hit our revenue target.

b Improving Visitor Satisfaction: goal is to make sure visitors are super happy, aiming for a satisfaction score of 4.5 out of 5 in surveys.  work on things like making rides safer, keeping the park clean, and providing top-notch customer service. If want to achieve this high satisfaction score in the next three months.

c Increasing Visitor Engagement: want people to stay longer at Lobster Land, so we're aim for a 20% increase in how long they hang around. To make this happen in the next six months, we'll bring in new rides, entertainment options, and fun stuff for visitors to do.

d Boosting Merchandise Sales: target is to sell more stuff from  shops, aiming for a 12% increase in merchandise sales compared to last year.do this by running special promotions, offering more products, and arranging our shop displays to encourage people to buy more.

e Improving Ride Waiting Times: Nobody likes waiting in line, so work to cut down how long people have to wait for rides by 25% in the next three months. This involves things like better planning for when rides are open, having more staff when it's busy, and making queues work smoother.
"""